sudo: true

before_install:
  - sudo apt-get update

addons:
  apt:
    packages:
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - cmake
      - gcc
      - binutils-dev

language: rust

cache: cargo

dist: trusty

os:
  - linux

# Run builds for all the supported trains
rust:
  - nightly
  - beta
  - stable

# Add clippy
before_script:
  - |
      if [[ "$TRAVIS_RUST_VERSION" == "nightly" ]]; then
        ( ( cargo install clippy && export CLIPPY=true ) || export CLIPPY=false );
      fi
  - export PATH=$PATH:~/.cargo/bin

# The main build
script:
  - cargo build
  - cargo test

notifications:
  email:
    on_success: change
    on_failure: always

script:
  - cargo build --verbose
  - cargo test

# Coverage report
after_success: |
  - |
      if [[ "$TRAVIS_OS_NAME" == "linux" && "$TRAVIS_RUST_VERSION" == "stable" ]]; then
        wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz &&
        tar xzf master.tar.gz &&
        cd kcov-master &&
        mkdir build &&
        cd build &&
        cmake .. &&
        make &&
        sudo make install &&
        cd ../.. &&
        rm -rf kcov-master &&
        for file in target/debug/bbox-*[^\.d]; do mkdir -p "target/cov/$(basename $file)"; kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done &&
        bash <(curl -s https://codecov.io/bash) &&
        echo "Uploaded code coverage"
      fi

# addons:
#   apt:
#     packages:
#     - libcurl4-openssl-dev
#     - libelf-dev
#     - libdw-dev
#     - libbfd-dev # required for `--verify`
#     - libiberty-dev
#
# after_success: |
#   wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz &&
#   tar xzf master.tar.gz && mkdir kcov-master/build && cd kcov-master/build &&
#   cmake -DCMAKE_INSTALL_PREFIX:PATH=$LOCAL .. && make &&
#   make install && cd ../.. &&
#   kcov --verify \
#        --coveralls-id=$TRAVIS_JOB_ID \
#        --exclude-pattern=/.cargo \
#        target/kcov target/debug/$PKGNAME-*
